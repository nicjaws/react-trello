{"ast":null,"code":"var _jsxFileName = \"/Users/nicjaws/Documents/GitHub/React/react-trello/src/components/CardEditor.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // Icons\n\nimport { IoMdCopy as CopyIcon, IoMdArchive as ArchiveIcon, IoMdCreate as EditIcon, IoMdClose as RemoveIcon } from 'react-icons/io'; // Components\n\nimport Button from './Button';\nimport Form from './Form';\nimport Popover from './Popover';\nimport Tag from './Tag';\n/*\n * TODO: Create the CardEditor component\n *\n * Requirements:\n * - Must be named CardEditor\n * - Must be a class component\n * - Should render a Form component to edit the card description (that contain a textarea and a submit button)\n * - Should render a list of buttons for all editing actions (edit labels, copy, archive)\n * - Should render a Popover component for displaying the label editing form:\n *    - Should render the list of tags\n *    - Should render an icon next to each tag to let the user remove each tag individually\n *    - Should render a Form component to add a new tag (that contain an input and a submit button)\n * \n * Tips:\n * - You can use the 'editor-modal' and 'editor-actions' CSS classes for styling\n * \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardEditor extends Component {\n  constructor(props) {\n    super(props); // TODO: Define your state properties here\n\n    this.state = {};\n  } // TODO: render the CardEditor UI.\n\n\n  render() {\n    var _this$props$position$, _this$props, _this$props$position, _this$props$position$2, _this$props2, _this$props2$position;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          position: \"absolute\",\n          top: `${(_this$props$position$ = (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$position = _this$props.position) === null || _this$props$position === void 0 ? void 0 : _this$props$position.top) !== null && _this$props$position$ !== void 0 ? _this$props$position$ : 0}px`,\n          left: `${(_this$props$position$2 = (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$position = _this$props2.position) === null || _this$props2$position === void 0 ? void 0 : _this$props2$position.left) !== null && _this$props$position$2 !== void 0 ? _this$props$position$2 : 0}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"editor-actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nCardEditor.defaultProps = {\n  initialValue: '',\n  tags: [],\n  position: null,\n  onSaveCard: () => null,\n  onRemoveTag: () => null,\n  onAddTag: () => null,\n  onCopyCard: () => null,\n  onArchiveCard: () => null\n};\nCardEditor.propTypes = {\n  initialValue: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  position: PropTypes.exact({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }),\n  onSaveCard: PropTypes.func,\n  onRemoveTag: PropTypes.func,\n  onAddTag: PropTypes.func,\n  onCopyCard: PropTypes.func,\n  onArchiveCard: PropTypes.func\n};\nexport default CardEditor;","map":{"version":3,"sources":["/Users/nicjaws/Documents/GitHub/React/react-trello/src/components/CardEditor.js"],"names":["React","Component","PropTypes","IoMdCopy","CopyIcon","IoMdArchive","ArchiveIcon","IoMdCreate","EditIcon","IoMdClose","RemoveIcon","Button","Form","Popover","Tag","CardEditor","constructor","props","state","render","display","flexDirection","position","top","left","defaultProps","initialValue","tags","onSaveCard","onRemoveTag","onAddTag","onCopyCard","onArchiveCard","propTypes","string","arrayOf","exact","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SACEC,QAAQ,IAAIC,QADd,EAEEC,WAAW,IAAIC,WAFjB,EAGEC,UAAU,IAAIC,QAHhB,EAIEC,SAAS,IAAIC,UAJf,QAKO,gBALP,C,CAMA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,UAAN,SAAyBd,SAAzB,CAAmC;AACjCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKC,KAAL,GAAa,EAAb;AACD,GANgC,CAQjC;;;AACAC,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,KAFV;AAGLC,UAAAA,QAAQ,EAAE,UAHL;AAILC,UAAAA,GAAG,EAAG,GAAD,wCAAG,KAAKN,KAAR,wEAAG,YAAYK,QAAf,yDAAG,qBAAsBC,GAAzB,yEAAgC,CAAE,IAJlC;AAKLC,UAAAA,IAAI,EAAG,GAAD,0CAAG,KAAKP,KAAR,0EAAG,aAAYK,QAAf,0DAAG,sBAAsBE,IAAzB,2EAAiC,CAAE;AALpC,SADT;AAAA,gCASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA/BgC;;AAgClC;AAEDT,UAAU,CAACU,YAAX,GAA0B;AACxBC,EAAAA,YAAY,EAAE,EADU;AAExBC,EAAAA,IAAI,EAAE,EAFkB;AAGxBL,EAAAA,QAAQ,EAAE,IAHc;AAIxBM,EAAAA,UAAU,EAAE,MAAM,IAJM;AAKxBC,EAAAA,WAAW,EAAE,MAAM,IALK;AAMxBC,EAAAA,QAAQ,EAAE,MAAM,IANQ;AAOxBC,EAAAA,UAAU,EAAE,MAAM,IAPM;AAQxBC,EAAAA,aAAa,EAAE,MAAM;AARG,CAA1B;AAWAjB,UAAU,CAACkB,SAAX,GAAuB;AACrBP,EAAAA,YAAY,EAAExB,SAAS,CAACgC,MADH;AAErBP,EAAAA,IAAI,EAAEzB,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACgC,MAA5B,CAFe;AAGrBZ,EAAAA,QAAQ,EAAEpB,SAAS,CAACkC,KAAV,CAAgB;AACxBb,IAAAA,GAAG,EAAErB,SAAS,CAACmC,MADS;AAExBb,IAAAA,IAAI,EAAEtB,SAAS,CAACmC;AAFQ,GAAhB,CAHW;AAOrBT,EAAAA,UAAU,EAAE1B,SAAS,CAACoC,IAPD;AAQrBT,EAAAA,WAAW,EAAE3B,SAAS,CAACoC,IARF;AASrBR,EAAAA,QAAQ,EAAE5B,SAAS,CAACoC,IATC;AAUrBP,EAAAA,UAAU,EAAE7B,SAAS,CAACoC,IAVD;AAWrBN,EAAAA,aAAa,EAAE9B,SAAS,CAACoC;AAXJ,CAAvB;AAcA,eAAevB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// Icons\nimport { \n  IoMdCopy as CopyIcon, \n  IoMdArchive as ArchiveIcon,\n  IoMdCreate as EditIcon,\n  IoMdClose as RemoveIcon  \n} from 'react-icons/io';\n// Components\nimport Button from './Button';\nimport Form from './Form';\nimport Popover from './Popover';\nimport Tag from './Tag';\n\n/*\n * TODO: Create the CardEditor component\n *\n * Requirements:\n * - Must be named CardEditor\n * - Must be a class component\n * - Should render a Form component to edit the card description (that contain a textarea and a submit button)\n * - Should render a list of buttons for all editing actions (edit labels, copy, archive)\n * - Should render a Popover component for displaying the label editing form:\n *    - Should render the list of tags\n *    - Should render an icon next to each tag to let the user remove each tag individually\n *    - Should render a Form component to add a new tag (that contain an input and a submit button)\n * \n * Tips:\n * - You can use the 'editor-modal' and 'editor-actions' CSS classes for styling\n * \n */ \nclass CardEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    // TODO: Define your state properties here\n    this.state = {}\n  }\n\n  // TODO: render the CardEditor UI.\n  render() {\n    return (\n      <div className=\"editor-modal\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            position: \"absolute\",\n            top: `${this.props?.position?.top ?? 0}px`,\n            left: `${this.props?.position?.left ?? 0}px`\n          }}\n        >\n          <div>\n            { /* render editor form */ }\n          </div>\n          <ul className=\"editor-actions\">\n            { /* render editor actions */ }\n            { /* render tags editing form */ }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n};\n\nCardEditor.defaultProps = {\n  initialValue: '',\n  tags: [],\n  position: null,\n  onSaveCard: () => null,\n  onRemoveTag: () => null,\n  onAddTag: () => null,\n  onCopyCard: () => null,\n  onArchiveCard: () => null\n};\n\nCardEditor.propTypes = {\n  initialValue: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  position: PropTypes.exact({\n    top: PropTypes.number,\n    left: PropTypes.number\n  }),\n  onSaveCard: PropTypes.func,\n  onRemoveTag: PropTypes.func,\n  onAddTag: PropTypes.func,\n  onCopyCard: PropTypes.func,\n  onArchiveCard: PropTypes.func\n};\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}