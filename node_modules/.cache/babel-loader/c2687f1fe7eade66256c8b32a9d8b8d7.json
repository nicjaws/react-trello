{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n/*\n * TODO: Create the Button component\n *\n * Requirements:\n * - Must be named Button\n * - Must be a function component\n * - Should render a <button> element\n * - Should render a <span> element inside the <button> for the text\n * - Should render an optional icon (from react-icons) before the text\n * \n * Tips:\n * - You can use the 'btn' and 'btn-success' CSS classes for styling\n * \n */\n\nconst Button = props => null;\n\n_c = Button;\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node,\n  onClick: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'editor'])\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/nicjaws/Documents/GitHub/React/react-trello/src/components/Button.js"],"names":["React","PropTypes","Button","props","propTypes","text","string","isRequired","icon","node","onClick","func","variant","oneOf"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW,IAA1B;;KAAMD,M;AAENA,MAAM,CAACE,SAAP,GAAmB;AACjBC,EAAAA,IAAI,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADN;AAEjBC,EAAAA,IAAI,EAAEP,SAAS,CAACQ,IAFC;AAGjBC,EAAAA,OAAO,EAAET,SAAS,CAACU,IAHF;AAIjBC,EAAAA,OAAO,EAAEX,SAAS,CAACY,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB;AAJQ,CAAnB;AAOA,eAAeX,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/*\n * TODO: Create the Button component\n *\n * Requirements:\n * - Must be named Button\n * - Must be a function component\n * - Should render a <button> element\n * - Should render a <span> element inside the <button> for the text\n * - Should render an optional icon (from react-icons) before the text\n * \n * Tips:\n * - You can use the 'btn' and 'btn-success' CSS classes for styling\n * \n */ \nconst Button = (props) => null;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node,\n  onClick: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'editor'])\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}