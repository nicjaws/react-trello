{"ast":null,"code":"var _jsxFileName = \"/Users/nicjaws/Documents/GitHub/React/react-trello/src/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Components\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport Tag from './Tag';\n/*\n * TODO: Create the Card component\n *\n * Requirements:\n * - Must be named Card\n * - Must be a function component\n * - Should render a <div> element as the container for the card content\n * - Should render the tags list at the top of the card content\n * - Should render the card number and description below the tags\n * \n * Tips:\n * - You can use the 'card' CSS class for styling\n *\n * [BONUS]:\n * - Wrap the card inside the <Draggable> component\n * --> https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/draggable.md\n * - Add the draggableId prop to it (should be the card ID)\n * - Add the index prop to it (should be the card index)\n * - Add the children function that returns your card component and bind everything together\n * --> https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/draggable.md#children-function-render-props--function-as-child\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"card\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\n_c = Card;\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  number: PropTypes.number.isRequired,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string)\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/nicjaws/Documents/GitHub/React/react-trello/src/components/Card.js"],"names":["React","PropTypes","Draggable","Tag","Card","props","propTypes","id","string","isRequired","index","number","description","tags","arrayOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,iBACX;AAAK,EAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,I;AAONA,IAAI,CAACE,SAAL,GAAiB;AACfC,EAAAA,EAAE,EAAEN,SAAS,CAACO,MAAV,CAAiBC,UADN;AAEfC,EAAAA,KAAK,EAAET,SAAS,CAACU,MAAV,CAAiBF,UAFT;AAGfE,EAAAA,MAAM,EAAEV,SAAS,CAACU,MAAV,CAAiBF,UAHV;AAIfG,EAAAA,WAAW,EAAEX,SAAS,CAACO,MAJR;AAKfK,EAAAA,IAAI,EAAEZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACO,MAA5B;AALS,CAAjB;AAQA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { Draggable } from 'react-beautiful-dnd';\nimport Tag from './Tag';\n\n/*\n * TODO: Create the Card component\n *\n * Requirements:\n * - Must be named Card\n * - Must be a function component\n * - Should render a <div> element as the container for the card content\n * - Should render the tags list at the top of the card content\n * - Should render the card number and description below the tags\n * \n * Tips:\n * - You can use the 'card' CSS class for styling\n *\n * [BONUS]:\n * - Wrap the card inside the <Draggable> component\n * --> https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/draggable.md\n * - Add the draggableId prop to it (should be the card ID)\n * - Add the index prop to it (should be the card index)\n * - Add the children function that returns your card component and bind everything together\n * --> https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/draggable.md#children-function-render-props--function-as-child\n */\nconst Card = (props) => (\n  <div className=\"card\">\n    { /* render tags list */ }\n    { /* render card number and description */ }\n  </div>\n);\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  number: PropTypes.number.isRequired,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}